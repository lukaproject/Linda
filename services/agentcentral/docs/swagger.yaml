basePath: /api
definitions:
  apis.AddBagReq:
    properties:
      bagDisplayName:
        example: test-bagDisplayName
        type: string
    type: object
  apis.AddBagResp:
    properties:
      bagDisplayName:
        type: string
      bagName:
        type: string
      createTimeMs:
        type: integer
      updateTimeMs:
        type: integer
    type: object
  apis.AddTaskReq:
    properties:
      scriptPath:
        example: /bin/test.sh
        type: string
      taskDisplayName:
        example: test-taskDisplayName
        type: string
      workingDir:
        example: /bin/testWorkingDir/working
        type: string
    type: object
  apis.AddTaskResp:
    properties:
      bagName:
        type: string
      createTimeMs:
        type: integer
      finishTimeMs:
        type: integer
      nodeId:
        type: string
      priority:
        type: integer
      scheduledTimeMs:
        type: integer
      scriptPath:
        type: string
      taskDisplayName:
        type: string
      taskName:
        type: string
      workingDir:
        type: string
    type: object
  apis.Bag:
    properties:
      bagDisplayName:
        type: string
      bagName:
        type: string
      createTimeMs:
        type: integer
      updateTimeMs:
        type: integer
    type: object
  apis.DeleteBagResp:
    properties:
      errorMsg:
        type: string
    type: object
  apis.GetBagResp:
    properties:
      bagDisplayName:
        type: string
      bagName:
        type: string
      createTimeMs:
        type: integer
      updateTimeMs:
        type: integer
    type: object
  apis.GetTaskResp:
    properties:
      bagName:
        type: string
      createTimeMs:
        type: integer
      finishTimeMs:
        type: integer
      nodeId:
        type: string
      priority:
        type: integer
      scheduledTimeMs:
        type: integer
      scriptPath:
        type: string
      taskDisplayName:
        type: string
      taskName:
        type: string
      workingDir:
        type: string
    type: object
  apis.ListBagsResp:
    properties:
      bags:
        items:
          $ref: '#/definitions/apis.Bag'
        type: array
    type: object
info:
  contact: {}
  description: This is agent central swagger API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: AgentCentral API
  version: 0.dev
paths:
  /bags:
    get:
      consumes:
      - application/json
      description: list bag
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.ListBagsResp'
      summary: list bag [no implementation]
    post:
      consumes:
      - application/json
      description: create a new bag
      parameters:
      - description: bag's request
        in: body
        name: addBagReq
        required: true
        schema:
          $ref: '#/definitions/apis.AddBagReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.AddBagResp'
      summary: add bag
  /bags/{bagName}:
    delete:
      consumes:
      - application/json
      description: delete bag
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.DeleteBagResp'
      summary: delete bag
    get:
      consumes:
      - application/json
      description: get bag
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.GetBagResp'
      summary: get bag
  /bags/{bagName}/tasks:
    post:
      consumes:
      - application/json
      description: add task
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      - description: add tasks's request
        in: body
        name: addTaskReq
        required: true
        schema:
          $ref: '#/definitions/apis.AddTaskReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.AddTaskResp'
      summary: add task
  /bags/{bagName}/tasks/{taskName}:
    get:
      consumes:
      - application/json
      description: get task
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      - description: task's name
        in: path
        name: taskName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.GetTaskResp'
      summary: get task
  /healthcheck:
    post:
      consumes:
      - application/json
      description: health check
      produces:
      - text/plain
      responses: {}
      summary: health check
swagger: "2.0"
