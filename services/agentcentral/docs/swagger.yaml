basePath: /api
definitions:
  apis.AddBagReq:
    properties:
      bagDisplayName:
        example: test-bagDisplayName
        type: string
    type: object
  apis.AddBagResp:
    properties:
      bagDisplayName:
        type: string
      bagName:
        type: string
      createTimeMs:
        format: int64
        type: integer
      updateTimeMs:
        format: int64
        type: integer
    type: object
  apis.AddTaskReq:
    properties:
      scriptPath:
        example: /bin/test.sh
        type: string
      taskDisplayName:
        example: test-taskDisplayName
        type: string
      workingDir:
        example: /bin/testWorkingDir/working
        type: string
    type: object
  apis.AddTaskResp:
    properties:
      bagName:
        type: string
      createTimeMs:
        format: int64
        type: integer
      finishTimeMs:
        format: int64
        type: integer
      nodeId:
        type: string
      priority:
        type: integer
      scheduledTimeMs:
        format: int64
        type: integer
      scriptPath:
        type: string
      taskDisplayName:
        type: string
      taskName:
        type: string
      workingDir:
        type: string
    type: object
  apis.Bag:
    properties:
      bagDisplayName:
        type: string
      bagName:
        type: string
      createTimeMs:
        format: int64
        type: integer
      updateTimeMs:
        format: int64
        type: integer
    type: object
  apis.DeleteBagResp:
    properties:
      errorMsg:
        type: string
    type: object
  apis.GetBagResp:
    properties:
      bagDisplayName:
        type: string
      bagName:
        type: string
      createTimeMs:
        format: int64
        type: integer
      updateTimeMs:
        format: int64
        type: integer
    type: object
  apis.GetTaskResp:
    properties:
      bagName:
        type: string
      createTimeMs:
        format: int64
        type: integer
      finishTimeMs:
        format: int64
        type: integer
      nodeId:
        type: string
      priority:
        type: integer
      scheduledTimeMs:
        format: int64
        type: integer
      scriptPath:
        type: string
      taskDisplayName:
        type: string
      taskName:
        type: string
      workingDir:
        type: string
    type: object
  apis.ListBagNodesResp:
    properties:
      nodeIds:
        items:
          type: string
        type: array
    type: object
  apis.NodeFreeReq:
    type: object
  apis.NodeInfo:
    properties:
      bagName:
        type: string
      maxRunningTasks:
        type: integer
    type: object
  apis.NodeJoinReq:
    properties:
      bagName:
        type: string
    type: object
  apis.Task:
    properties:
      bagName:
        type: string
      createTimeMs:
        format: int64
        type: integer
      finishTimeMs:
        format: int64
        type: integer
      nodeId:
        type: string
      priority:
        type: integer
      scheduledTimeMs:
        format: int64
        type: integer
      scriptPath:
        type: string
      taskDisplayName:
        type: string
      taskName:
        type: string
      workingDir:
        type: string
    type: object
  apis.UploadFilesReq:
    properties:
      files:
        items:
          properties:
            locationPath:
              description: the location of file in node
              type: string
            uri:
              description: File's URI
              type: string
          type: object
        type: array
      nodes:
        description: nodes id list which will receive these files.
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  description: This is agent central swagger API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: AgentCentral API
  version: 0.dev
paths:
  /agents/free/{nodeId}:
    post:
      consumes:
      - application/json
      description: free node
      parameters:
      - description: node id
        in: path
        name: nodeId
        required: true
        type: string
      - description: Node free request
        in: body
        name: nodeFreeReq
        required: true
        schema:
          $ref: '#/definitions/apis.NodeFreeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: free node
      tags:
      - agents
  /agents/info/{nodeId}:
    get:
      consumes:
      - application/json
      description: get node info by node id
      parameters:
      - description: node id
        in: path
        name: nodeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.NodeInfo'
      summary: get node info
      tags:
      - agents
  /agents/join/{nodeId}:
    post:
      consumes:
      - application/json
      description: join free node to a bag
      parameters:
      - description: node id
        in: path
        name: nodeId
        required: true
        type: string
      - description: Node join request
        in: body
        name: nodeJoinReq
        required: true
        schema:
          $ref: '#/definitions/apis.NodeJoinReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: join free node to a bag
      tags:
      - agents
  /agents/listids:
    get:
      consumes:
      - application/json
      description: list nodes, return node ids by query, query format support prefix=,
        createAfter=, idAfter=, limit=.
      parameters:
      - description: find all ids with this prefix
        in: query
        name: prefix
        type: string
      - description: find all ids created after this time (ms)
        in: query
        name: createAfter
        type: integer
      - description: max count of node ids in result
        in: query
        name: limit
        type: integer
      - description: find all node ids which id greater or equal to this id
        in: query
        name: idAfter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: list nodes, return node ids by query
      tags:
      - agents
  /agents/uploadfiles:
    post:
      consumes:
      - application/json
      description: upload files to nodes
      parameters:
      - description: upload files request
        in: body
        name: uploadFilesReq
        required: true
        schema:
          $ref: '#/definitions/apis.UploadFilesReq'
      produces:
      - application/json
      responses: {}
      summary: upload files to nodes
      tags:
      - agents
  /bagnodes/{bagName}:
    get:
      consumes:
      - application/json
      description: list all node ids which belong to this node
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.ListBagNodesResp'
      summary: list bag nodes
      tags:
      - bags
  /bags:
    get:
      consumes:
      - application/json
      description: list bags
      parameters:
      - description: find all bags which bagName with this prefix
        in: query
        name: prefix
        type: string
      - description: find all bags created after this time (ms)
        in: query
        name: createAfter
        type: integer
      - description: max count of bags in result
        in: query
        name: limit
        type: integer
      - description: find all bags which bagName greater or equal to this id
        in: query
        name: idAfter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/apis.Bag'
            type: array
      summary: list bags
      tags:
      - bags
    post:
      consumes:
      - application/json
      description: create a new bag
      parameters:
      - description: bag's request
        in: body
        name: addBagReq
        required: true
        schema:
          $ref: '#/definitions/apis.AddBagReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.AddBagResp'
      summary: add bag
      tags:
      - bags
  /bags/{bagName}:
    delete:
      consumes:
      - application/json
      description: delete bag
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.DeleteBagResp'
      summary: delete bag
      tags:
      - bags
    get:
      consumes:
      - application/json
      description: get bag
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.GetBagResp'
      summary: get bag
      tags:
      - bags
  /bags/{bagName}/tasks:
    get:
      consumes:
      - application/json
      description: list tasks
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      - description: find all tasks which taskName with this prefix
        in: query
        name: prefix
        type: string
      - description: find all tasks created after this time (ms)
        in: query
        name: createAfter
        type: integer
      - description: max count of tasks in result
        in: query
        name: limit
        type: integer
      - description: find all tasks which taskName greater or equal to this id
        in: query
        name: idAfter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/apis.Task'
            type: array
      summary: list tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: add task
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      - description: add tasks's request
        in: body
        name: addTaskReq
        required: true
        schema:
          $ref: '#/definitions/apis.AddTaskReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.AddTaskResp'
      summary: add task
      tags:
      - tasks
  /bags/{bagName}/tasks/{taskName}:
    get:
      consumes:
      - application/json
      description: get task
      parameters:
      - description: bag's name
        in: path
        name: bagName
        required: true
        type: string
      - description: task's name
        in: path
        name: taskName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apis.GetTaskResp'
      summary: get task
      tags:
      - tasks
  /healthcheck:
    post:
      consumes:
      - application/json
      description: health check
      produces:
      - text/plain
      responses: {}
      summary: health check
swagger: "2.0"
