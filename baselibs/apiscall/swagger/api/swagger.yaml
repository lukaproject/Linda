openapi: 3.0.1
info:
  title: AgentCentral API
  description: This is agent central swagger API
  termsOfService: http://swagger.io/terms/
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.dev
servers:
- url: /api
paths:
  /agents/free/{nodeId}:
    post:
      tags:
      - agents
      summary: free node
      description: free node
      parameters:
      - name: nodeId
        in: path
        description: node id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Node free request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apis.NodeFreeReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
      x-codegen-request-body-name: nodeFreeReq
  /agents/info/{nodeId}:
    get:
      tags:
      - agents
      summary: get node info
      description: get node info by node id
      parameters:
      - name: nodeId
        in: path
        description: node id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apis.NodeInfo'
  /agents/join/{nodeId}:
    post:
      tags:
      - agents
      summary: join free node to a bag
      description: join free node to a bag
      parameters:
      - name: nodeId
        in: path
        description: node id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Node join request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apis.NodeJoinReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
      x-codegen-request-body-name: nodeJoinReq
  /agents/list:
    get:
      tags:
      - agents
      summary: "list nodes, return all node ids"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
  /agents/uploadfiles:
    post:
      tags:
      - agents
      summary: upload files to nodes
      description: upload files to nodes
      requestBody:
        description: upload files request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apis.UploadFilesReq'
        required: true
      x-codegen-request-body-name: uploadFilesReq
  /bagnodes/{bagName}:
    get:
      tags:
      - bags
      summary: list bag nodes
      description: list all node ids which belong to this node
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apis.ListBagNodesResp'
  /bags:
    get:
      tags:
      - bags
      summary: "list bags [no implementation]"
      description: list bags
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apis.ListBagsResp'
    post:
      tags:
      - bags
      summary: add bag
      description: create a new bag
      requestBody:
        description: bag's request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apis.AddBagReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apis.AddBagResp'
      x-codegen-request-body-name: addBagReq
  /bags/{bagName}:
    get:
      tags:
      - bags
      summary: get bag
      description: get bag
      parameters:
      - name: bagName
        in: path
        description: bag's name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apis.GetBagResp'
    delete:
      tags:
      - bags
      summary: delete bag
      description: delete bag
      parameters:
      - name: bagName
        in: path
        description: bag's name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apis.DeleteBagResp'
  /bags/{bagName}/tasks:
    post:
      tags:
      - tasks
      summary: add task
      description: add task
      parameters:
      - name: bagName
        in: path
        description: bag's name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: add tasks's request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apis.AddTaskReq'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apis.AddTaskResp'
      x-codegen-request-body-name: addTaskReq
  /bags/{bagName}/tasks/{taskName}:
    get:
      tags:
      - tasks
      summary: get task
      description: get task
      parameters:
      - name: bagName
        in: path
        description: bag's name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: taskName
        in: path
        description: task's name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apis.GetTaskResp'
  /files/download/{block}/{fileName}:
    get:
      tags:
      - files
      summary: download file
      description: download file
      parameters:
      - name: fileName
        in: path
        description: file name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: block
        in: path
        description: block name
        required: true
        style: simple
        explode: false
        schema:
          type: string
  /files/upload:
    post:
      tags:
      - files
      summary: Upload file
      description: "Upload file, can only upload 1 file."
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/files_upload_body'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
  /healthcheck:
    post:
      summary: health check
      description: health check
components:
  schemas:
    apis.AddBagReq:
      type: object
      properties:
        bagDisplayName:
          type: string
          example: test-bagDisplayName
    apis.AddBagResp:
      type: object
      properties:
        bagDisplayName:
          type: string
        bagName:
          type: string
        createTimeMs:
          type: integer
        updateTimeMs:
          type: integer
      example:
        updateTimeMs: 6
        bagName: bagName
        bagDisplayName: bagDisplayName
        createTimeMs: 0
    apis.AddTaskReq:
      type: object
      properties:
        scriptPath:
          type: string
          example: /bin/test.sh
        taskDisplayName:
          type: string
          example: test-taskDisplayName
        workingDir:
          type: string
          example: /bin/testWorkingDir/working
    apis.AddTaskResp:
      type: object
      properties:
        bagName:
          type: string
        createTimeMs:
          type: integer
          format: int64
        finishTimeMs:
          type: integer
          format: int64
        nodeId:
          type: string
        priority:
          type: integer
        scheduledTimeMs:
          type: integer
          format: int64
        scriptPath:
          type: string
        taskDisplayName:
          type: string
        taskName:
          type: string
        workingDir:
          type: string
      example:
        finishTimeMs: 6
        scriptPath: scriptPath
        scheduledTimeMs: 5
        workingDir: workingDir
        bagName: bagName
        taskName: taskName
        priority: 1
        nodeId: nodeId
        createTimeMs: 0
        taskDisplayName: taskDisplayName
    apis.Bag:
      type: object
      properties:
        bagDisplayName:
          type: string
        bagName:
          type: string
        createTimeMs:
          type: integer
        updateTimeMs:
          type: integer
      example:
        updateTimeMs: 6
        bagName: bagName
        bagDisplayName: bagDisplayName
        createTimeMs: 0
    apis.DeleteBagResp:
      type: object
      properties:
        errorMsg:
          type: string
      example:
        errorMsg: errorMsg
    apis.GetBagResp:
      type: object
      properties:
        bagDisplayName:
          type: string
        bagName:
          type: string
        createTimeMs:
          type: integer
        updateTimeMs:
          type: integer
      example:
        updateTimeMs: 6
        bagName: bagName
        bagDisplayName: bagDisplayName
        createTimeMs: 0
    apis.GetTaskResp:
      type: object
      properties:
        bagName:
          type: string
        createTimeMs:
          type: integer
          format: int64
        finishTimeMs:
          type: integer
          format: int64
        nodeId:
          type: string
        priority:
          type: integer
        scheduledTimeMs:
          type: integer
          format: int64
        scriptPath:
          type: string
        taskDisplayName:
          type: string
        taskName:
          type: string
        workingDir:
          type: string
      example:
        finishTimeMs: 6
        scriptPath: scriptPath
        scheduledTimeMs: 5
        workingDir: workingDir
        bagName: bagName
        taskName: taskName
        priority: 1
        nodeId: nodeId
        createTimeMs: 0
        taskDisplayName: taskDisplayName
    apis.ListBagNodesResp:
      type: object
      properties:
        nodeIds:
          type: array
          items:
            type: string
      example:
        nodeIds:
        - nodeIds
        - nodeIds
    apis.ListBagsResp:
      type: object
      properties:
        bags:
          type: array
          items:
            $ref: '#/components/schemas/apis.Bag'
      example:
        bags:
        - updateTimeMs: 6
          bagName: bagName
          bagDisplayName: bagDisplayName
          createTimeMs: 0
        - updateTimeMs: 6
          bagName: bagName
          bagDisplayName: bagDisplayName
          createTimeMs: 0
    apis.NodeFreeReq:
      type: object
    apis.NodeInfo:
      type: object
      properties:
        bagName:
          type: string
        maxRunningTasks:
          type: integer
      example:
        bagName: bagName
        maxRunningTasks: 0
    apis.NodeJoinReq:
      type: object
      properties:
        bagName:
          type: string
    apis.UploadFilesReq:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: apis.UploadFilesReq_files
        nodes:
          type: array
          description: nodes id list which will receive these files.
          items:
            type: string
    files_upload_body:
      required:
      - block
      - file
      - fileName
      type: object
      properties:
        fileName:
          type: string
          description: file name
        block:
          type: string
          description: file block
        file:
          type: string
          description: this is a file
          format: binary
    apis.UploadFilesReq_files:
      type: object
      properties:
        locationPath:
          type: string
          description: the location of file in node
        uri:
          type: string
          description: File's URI
x-original-swagger-version: "2.0"
